spring.application.name=bus2

#?? ????
api.service-key=nXDHWHePZ43+FJLdByDmpNNmtHmCiiREzeY4MJMzpOfGlmwhD87LFoGufHgFKtMISxZqokqCYhyjDK7/guTOGw==
#fetch key
public.api-key=lIuYX2niKlocef22bmi40PfIT9fT2VuJdhz5wULQUmCMHm4yit0AxNRDUinnB/J9WU/pEOMof3VV11vrnYpUdw==

#decoding
api.service-key-decoding=j/gLHENNg0EDmUOP1OcG5WafUwAUq0u6D1CAZp7xdSTLsSmRJ7r6Pfi34Ks2ZZ7lM0zVZHjjESDToVIX+soPGA==
#encoding
api.service-key-encoding=j%2FgLHENNg0EDmUOP1OcG5WafUwAUq0u6D1CAZp7xdSTLsSmRJ7r6Pfi34Ks2ZZ7lM0zVZHjjESDToVIX%2BsoPGA%3D%3D
#ORSKey
ors.api.key=5b3ce3597851110001cf62483e63274fe6924368a3bfe20838e82dac
api.bus.base-url=https://apis.data.go.kr/6270000/dbmsapi01

server.port=8081

#Websocket
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=123123
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat

# Spring Boot Web setting
spring.web.resources.static-locations=classpath:/static/, classpath:/public/
spring.web.resources.chain.enabled=true
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**
spring.web.resources.cache.period=0
spring.web.resources.encoding=UTF-8

# Spring Boot File Multipart setting
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=25MB
spring.mvc.hiddenmethod.filter.enabled=true



# CORS setting
spring.web.cors.allowed-origin-patterns=https://localhost:8081

# DB setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://docs.yi.or.kr:33306/bus
spring.datasource.username=root
spring.datasource.password=yi0535551333@
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect


#spring.datasource.url=jdbc:mysql://localhost:3306/bus
#spring.datasource.username=root
#spring.datasource.password=1333

# JPA setting WARNING! DO NOT CHANGE
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Transactional setting
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Thymeleaf setting
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false

## Redis Setting
spring.data.redis.host=localhost
spring.data.redis.port=6379
#spring.data.redis.password=yourpassword
spring.data.redis.timeout=6000

# dashboard debug log test
logging.level.kroryi.bus2.handler.DashboardWebSocketHandler=DEBUG

# oauth2 debug log test
logging.level.org.springframework.security.oauth2=TRACE

# web client debug log test
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# [??] Lazy ?? ?? ??? ?? (Entity ??? ??? ?? ??)
spring.jackson.serialization.fail-on-empty-beans=false

# Redis repositories active
spring.data.redis.repositories.enabled=true
# JPA repositories active
spring.data.jpa.repositories.enabled=true

# SMTP email passwordcode send (naver)
#spring.mail.host=smtp.naver.com
#spring.mail.port=587
#spring.mail.username=kyb4218@naver.com
#spring.mail.password=FVZL3DP4ZLMP
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000

# SMTP email passwordcode send (gmail)
# Gmail SMTP ?? ??
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=kyb4218@gmail.com
spring.mail.password=ecjtczvxounefbgs

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

spring.mail.transport.protocol=smtp
spring.mail.debug=true

# Oauth2 (kakao)
spring.security.oauth2.client.registration.kakao.client-id=30efcf00ec8ef05c31530d09edb64602
spring.security.oauth2.client.registration.kakao.client-secret=S4D6zu8BZzbc9HYA3faD5bk3T7cIoktA
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=https://localhost:8081/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Oauth2 (google)
#spring.security.oauth2.client.registration.google.client-id=
#spring.security.oauth2.client.registration.google.client-secret=
#spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Swagger UI ??
springdoc.swagger-ui.path=/index.html
springdoc.swagger-ui.enabled=true
#springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.api-docs.path=/v3/api-docs
#springdoc.swagger-ui.url=/v3/api-docs
springdoc.api-docs.enabled=true

#??? ???
file.upload.found-location=C:/Users/edu011/IdeaProjects/bus2/uploads/found/
file.url-prefix=/uploads/found/
#?? ???
file.upload.ad-location=C:/Users/edu011/IdeaProjects/bus2/uploads/ad/





# JWT
kroryi.jwt.secret=hello12345678901234567890123456789012345678901234567890
apikey.default.expiration=86400

